continue
User.find_by(discord_id: params['id'])
params
continue
ordered_set
continue
ordered_set
continue
user_stats[0].each {|a| p a }
user_stats[0].each {|a| a['a'] }
user_stats[0].first
user_stats[0]
user_stats[0].keys.first.starts_with?('weapon_used')
user_stats[0].keys.first
user_stats[0].keys
user_stats[0]
WeaponStat.column_names.filter {}
user_stats[0]
user_stats[1]
user_stats[2]
user_stats[1]
user_stats[0]
user_stats
exit
JSON.parse(response.body)['id']
JSON.parse(response.body)
response.body
exit
      )
        }
          'Authorization': "Bearer #{token}"
        headers: {
        'https://discord.com/api/users/@me',
      response = HTTParty.get(
response
steam_account
response.body
response
continue
reply
User.find_by(steam_id: '76561198043378601') == User.me
User.find_by(steam_id: '76561198043378601')
reply.filter {|acc| acc['type'] && acc['type'] == 'steam' }.first['id']
reply.filter {|acc| acc['type'] && acc['type'] == 'steam' }.first.id
reply.filter {|acc| acc['type'] && acc['type'] == 'steam' }.first
[].filter {|acc| acc['type'] && acc['type'] == 'steam' }.first
[].filter {|acc| acc['type'] && acc['type'] == 'steam' }
reply.filter {|acc| acc['type'] && acc['type'] == 'steam' }
reply
reply.second
reply.first
reply
reply = JSON.parse(response.body)
JSON.parse(response.body)
response.body
response.bodt
response
continue
access.scope
access.token
access.params
access
access.scope
access.token
access
exit
response
exit
response
exit
ENV['OAUTH_CLIENT_ID']
ENV['REDIS_URL']
ENV['REDIS']
continue
ENV['OAUTH_CLIENT_ID']
response
continue
exit
DownloadGif.find(12).attach
DownloadGif.find(12)
self.attach
id
continue
base_gif.first.class
base_gif.first
base_gif.length
base_gif
continue
params[:id]
